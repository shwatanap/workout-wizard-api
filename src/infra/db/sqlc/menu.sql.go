// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: menu.sql

package sqlc

import (
	"context"
)

const createMenu = `-- name: CreateMenu :exec
INSERT INTO menus (
	user_id,
	target,
	comment
) VALUES (
	?, ?, ?
)
`

type CreateMenuParams struct {
	UserID  int32  `json:"user_id"`
	Target  string `json:"target"`
	Comment string `json:"comment"`
}

func (q *Queries) CreateMenu(ctx context.Context, arg CreateMenuParams) error {
	_, err := q.db.ExecContext(ctx, createMenu, arg.UserID, arg.Target, arg.Comment)
	return err
}

const getCreatedMenuID = `-- name: GetCreatedMenuID :one
SELECT LAST_INSERT_ID()
`

func (q *Queries) GetCreatedMenuID(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, getCreatedMenuID)
	var last_insert_id int64
	err := row.Scan(&last_insert_id)
	return last_insert_id, err
}

const getMenu = `-- name: GetMenu :one
SELECT (
	id,
	user_id,
	target,
	comment
)
FROM menus
WHERE id = ?
`

func (q *Queries) GetMenu(ctx context.Context, id int32) (interface{}, error) {
	row := q.db.QueryRowContext(ctx, getMenu, id)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}
